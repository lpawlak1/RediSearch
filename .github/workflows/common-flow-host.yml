name: default (common) flow for host runner

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      san:
        type: string
      get-redis:
        type: boolean
      redis-ref: # Only used if get-redis is true. Allows to specify a specific ref to checkout (barnch, tag, commit...)
        type: string

env:
  MODE: "sudo"

jobs:
  common-flow:
    runs-on: ${{ inputs.env }}
# From this point on, this file should be identical to the other common flow.
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: Deps checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: .install
      - name: Setup
        run: |
          ${{env.MODE}} ./.install/install_script.sh
      - name: Full checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          set-safe-directory: "'*'"
      - name: Get Redis
        if: ${{ inputs.get-redis }}
        uses: actions/checkout@v3
        with:
          repository: redis/redis
          ref: ${{ inputs.redis-ref || '7.2' }}
          path: redis
      - name: Build Redis
        if: ${{ inputs.get-redis }}
        working-directory: redis
        run: ${{ env.MODE }} make install
      - name: Build
        run: |
          make SAN=${{ inputs.san }}
          make COORD=1 SAN=${{ inputs.san }}
      - name: Unit tests
        run: |
          make unit-tests LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Flow tests
        run: |
          make pytest QUICK=1 LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Unit tests (coordinator)
        run: |
          make COORD=1 unit-tests LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Flow tests (coordinator)
        run: |
          make COORD=1 pytest QUICK=1 LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Test Logs
          path: |
            tests/logs
            tests/pytests/logs/*.log
          if-no-files-found: ignore
      - name: Upload Sanitizer Artifacts
        if: ${{ inputs.san }}
        uses: actions/upload-artifact@v3
        with:
          name: Sanitizer Logs
          path: tests/pytests/logs/*.log.*
          if-no-files-found: ignore
