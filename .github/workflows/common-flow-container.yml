name: default (common) flow for container runs

on:
  workflow_call:
    inputs:
      env:
        default: "ubuntu-latest"
        type: string
      container:
        required: true
        type: string
      container_options:
        type: string
        default: --cpus 2
      san:
        type: string
      get-redis:
        type: boolean
      redis-ref: # Only used if get-redis is true. Allows to specify a specific ref to checkout (barnch, tag, commit...)
        type: string
      deps-install-mode:
        type: string
        default: ""
        description: "How to install dependencies. User mode is the default, pass 'sudo' to install as root."

jobs:
  common-flow:
    runs-on: ${{ inputs.env }}
    container:
      image: ${{ inputs.container }}
      options: ${{ inputs.container_options }}
# From this point on, this file should be identical to the other common flow.
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          set-safe-directory: "'**'"
      - name: PWD0
        run: |
          pwd
          ls -la
      - name: Setup
        run: ${{ inputs.deps-install-mode }} ./.install/install_script.sh
      - name: PWD1
        run: |
          pwd
          ls -la
      - name: Get Redis
        if: ${{ inputs.get-redis }}
        uses: actions/checkout@v3
        with:
          repository: redis/redis
          ref: ${{ inputs.redis-ref || '7.2' }}
          path: redis
      - name: Build Redis
        if: ${{ inputs.get-redis }}
        working-directory: redis
        run: ${{ inputs.deps-install-mode }} make install
      - name: PWD2
        run: |
          pwd
          ls -la
      - name: Build
        run: |
          make SAN=${{ inputs.san }}
          make COORD=1 SAN=${{ inputs.san }}
      - name: Unit tests
        run: |
          make unit-tests LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Flow tests
        run: |
          make pytest QUICK=1 LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Unit tests (coordinator)
        run: |
          make COORD=1 unit-tests LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Flow tests (coordinator)
        run: |
          make COORD=1 pytest QUICK=1 LOG=1 CLEAR_LOGS=0 SAN=${{ inputs.san }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Test Logs
          path: |
            tests/logs
            tests/pytests/logs/*.log
          if-no-files-found: ignore
      - name: Upload Sanitizer Artifacts
        if: ${{ inputs.san }}
        uses: actions/upload-artifact@v3
        with:
          name: Sanitizer Logs
          path: tests/pytests/logs/*.log.*
          if-no-files-found: ignore
